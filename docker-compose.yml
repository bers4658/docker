version: '3.9'

services:

  web-server-apache-php:
    container_name: web-server-apache-php
    build:
      dockerfile: .docker/Dockerfile-web-server-apache-php
      context: .
      args:
        PROJECT_PUBLIC_PATH: ${PROJECT_PUBLIC_PATH}
        PHP_VERSION: ${PHP_VERSION}
    volumes:
      - '.docker/conf/php.ini:/usr/local/etc/php/conf.d/php.ini'
      - './projects/${PROJECT_NAME}:/var/www/html'
    ports:
      - '80${PORT}0:80'

  web-wordpress:
    container_name: web-wordpress
    build:
      dockerfile: .docker/Dockerfile-web-wordpress
      context: .
    stdin_open: true
    tty: true
    environment:
      - WORDPRESS_DB_HOST=db-mysql
      - WORDPRESS_DB_NAME=${DB_NAME}
      - WORDPRESS_DB_USER=DB_USER
      - WORDPRESS_DB_PASSWORD=DB_PASSWORD
    volumes:
      - './projects/${PROJECT_NAME}:/var/www/html'
    ports:
      - '90${PORT}0:80'

  nodejs:
    container_name: nodejs
    build:
      dockerfile: .docker/Dockerfile-nodejs
      context: .
      args:
        PROJECT_PUBLIC_PATH: ${PROJECT_PUBLIC_PATH}
        NODEJS_VERSION: ${NODEJS_VERSION}
    volumes:
      - '.:/var/www/html'
    ports:
      - '70${PORT}1:80'

  db-mysql:
    container_name: db-mysql
    image: mysql:latest
    command: mysqld --default-authentication-plugin=mysql_native_password
    environment:
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=docker_user
      - MYSQL_PASSWORD=docker_password
      - MYSQL_ROOT_PASSWORD=docker_password
    volumes:
      - db_data_mysql:/var/lib/mysql
      - './projects/${PROJECT_NAME}/docker-local-db-import/mysql:/docker-entrypoint-initdb.d'
    ports:
      - '70${PORT}2:3306'

  web-phpmyadmin:
    container_name: web-phpmyadmin
    image: phpmyadmin/phpmyadmin
    restart: always
    environment:
      PMA_HOST: db-mysql
      PMA_PORT: 3306
      UPLOAD_LIMIT: 1000M
    ports:
      - '50${PORT}1:80'

  web-adminer:
    container_name: web-adminer
    image: adminer
    environment:
      ADMINER_DEFAULT_SERVER: db-mysql
    ports:
      - '50${PORT}2:8080'

  db-postgres:
    container_name: db-postgres
    image: postgres:latest
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=docker_user
      - POSTGRES_PASSWORD=docker_password
      - PGDATA=/var/lib/postgresql/data
    volumes:
      - db_data_postgres:/var/lib/postgresql/data
      - './projects/${PROJECT_NAME}/docker-local-db-import/postgresql:/docker-entrypoint-initdb.d'
    ports:
      - '70${PORT}3:5432'

  web-pgadmin:
    container_name: web-pgadmin
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - '50${PORT}3:80'

  db-redis:
    container_name: db-redis
    image: redis:latest
    ports:
      - '70${PORT}4:6379'

#  mailhog:
#    image: 'mailhog/mailhog:latest'
#    ports:
#      - '${FORWARD_MAILHOG_PORT:-1025}:1025'
#      - '${FORWARD_MAILHOG_DASHBOARD_PORT:-8025}:8025'
#    networks:
#      - sail

volumes:
  db_data_mysql:
    name: ${PROJECT_NAME}
  db_data_postgres:
    name: ${PROJECT_NAME}